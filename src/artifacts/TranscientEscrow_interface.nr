/* Autogenerated file, do not edit! */
  
use dep::std;
use dep::aztec::context::{ PrivateContext, PublicContext };
use dep::aztec::constants_gen::RETURN_VALUES_LENGTH;

struct TokenCombineTwoEscrowsStruct {
  address: Field,
}

struct TokenCreateEscrowsStruct {
  address: Field,
}


// Interface for calling TranscientEscrow functions from a private context
struct TranscientEscrowPrivateContextInterface {
  address: Field,
}

impl TranscientEscrowPrivateContextInterface {
  pub fn at(address: Field) -> Self {
      Self {
          address,
      }
  }
  
  pub fn combineTwoEscrows(
    self,
    context: &mut PrivateContext,
    token: TokenCombineTwoEscrowsStruct,
    amount1: Field,
    randomness1: Field,
    amount2: Field,
    randomness2: Field
  ) -> [Field; RETURN_VALUES_LENGTH] {
    let mut serialized_args = [0; 5];
    serialized_args[0] = token.address;
    serialized_args[1] = amount1;
    serialized_args[2] = randomness1;
    serialized_args[3] = amount2;
    serialized_args[4] = randomness2;

    context.call_private_function(self.address, 0x48722f32, serialized_args)
  }
  

  pub fn createEscrows(
    self,
    context: &mut PrivateContext,
    token: TokenCreateEscrowsStruct,
    amount1: Field,
    nonce1: Field,
    amount2: Field,
    nonce2: Field
  ) -> [Field; RETURN_VALUES_LENGTH] {
    let mut serialized_args = [0; 5];
    serialized_args[0] = token.address;
    serialized_args[1] = amount1;
    serialized_args[2] = nonce1;
    serialized_args[3] = amount2;
    serialized_args[4] = nonce2;

    context.call_private_function(self.address, 0xec436b5d, serialized_args)
  }
  
}
  
  


// Interface for calling TranscientEscrow functions from a public context
struct TranscientEscrowPublicContextInterface {
  address: Field,
}

impl TranscientEscrowPublicContextInterface {
  pub fn at(address: Field) -> Self {
      Self {
          address,
      }
  }
  
}
  
  
